{
  "id": "630c9fd7f1203707c9d93de2",
  "name": "Street Light",
  "tags": {},
  "labels": [],
  "workspaceId": "6246fbe2fdee1fd07c3bb327",
  "version": 1,
  "createdBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdateBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdatedOn": "2022-09-13T09:36:33.109Z",
  "definition": {
    "protocol": "http",
    "clientId": "",
    "additionalPackages": {},
    "strategy": "Default",
    "settings": {
      "url": "https://5hex2r.sse.codesandbox.io/endpoint",
      "topic": "/hello/",
      "subscriptionTopics": [
        "/hello",
        "/world"
      ],
      "timeout": 10000,
      "qos": 0,
      "retain": false,
      "keepalive": 10000,
      "reconnectPeriod": 60000,
      "connectTimeout": 60000,
      "username": "",
      "password": "",
      "identity": "",
      "psk": "",
      "key": "",
      "cert": "",
      "ca": "",
      "headers": {
        "Content-Type": "application/json"
      },
      "method": "POST"
    },
    "model": {
      "currentState": "Init",
      "stateMap": {
        "Init": {
          "name": "Init",
          "isEnabled": true,
          "sender": "{\n  var API_Key = glob.get('API_Key')\n  var OWM_API_Key = glob.get('OWM_API_Key')\n\n  state.smart_city = glob.get('Enable_Smart_City')\n\n  state.r_latitude = chance.floating({ min: 12.8, max: 13.1, fixed: 6 });\n  state.r_longitude = chance.floating({ min: 77.5, max: 77.8, fixed: 6 });\n\n  var url = 'https://roads.googleapis.com/v1/nearestRoads?points=' + state.r_latitude + \",\" + state.r_longitude + '&key=' + API_Key\n\n  var res = rest.get(url)\n\n  state.latitude = res.snappedPoints[0].location.latitude\n  state.longitude = res.snappedPoints[0].location.longitude\n\n  // var owm_url = 'https://api.openweathermap.org/data/2.5/weather?lat=' + state.latitude + '&lon=' + state.longitude + '&appid=' + OWM_API_Key\n  // console.log(owm_url)\n  // var owm_res = rest.get(owm_url)\n  // console.log(owm_res)\n\n  state.status = 'off'\n  state.energy_produced = 0\n  state.energy_consumed = 0\n\n  next('Day')\n}",
          "receiver": "",
          "icon": "",
          "index": 0
        },
        "Day": {
          "name": "Day",
          "isEnabled": true,
          "sender": "{\n  let currentHour = dayjs().hour();\n\n  if (currentHour > 7 && currentHour < 20) {\n    state.status = \"off\";\n    var output = chance.integer({ min: 1, max: 6 });\n    state.energy_produced += output;\n\n    var message = {\n      device: \"street_light\",\n      id: client(),\n      latitude: state.latitude,\n      longitude: state.longitude,\n      status: state.status,\n      energy_produced: state.energy_produced,\n      energy_consumed: state.energy_consumed,\n    };\n\n    if (state.smart_city == true) {\n      mailbox.post(\"street_light_\" + client(), message);\n    }\n    return JSON.stringify(message, null, 2);\n  } else {\n    next(\"Night\");\n  }\n}\n",
          "receiver": "",
          "icon": "",
          "index": 1
        },
        "Night": {
          "name": "Night",
          "isEnabled": true,
          "sender": "{\n  let currentHour = dayjs().hour();\n\n  if (currentHour < 7 || currentHour > 20) {\n    state.status = \"on\";\n    var consumption = chance.integer({ min: 1, max: 6 });\n    state.energy_consumed += consumption;\n\n    var message = {\n      device: \"street_light\",\n      id: client(),\n      latitude: state.latitude,\n      longitude: state.longitude,\n      status: state.status,\n      energy_produced: state.energy_produced,\n      energy_consumed: state.energy_consumed,\n    };\n\n    if (state.smart_city == true) {\n      mailbox.post(\"trash_can_\" + client(), message);\n    }\n    return JSON.stringify(message, null, 2);\n  } else {\n    next(\"Night\");\n  }\n}\n",
          "receiver": "",
          "index": 2,
          "icon": ""
        },
        "Finished": {
          "name": "Finished",
          "isEnabled": true,
          "sender": "",
          "receiver": "",
          "icon": "",
          "index": 3
        }
      },
      "setup": "",
      "teardown": ""
    }
  }
}