{
  "id": "625fdc5b864e634e0f4ff4fa",
  "name": "reduced-priscilla",
  "tags": null,
  "labels": null,
  "workspaceId": "6246fbe2fdee1fd07c3bb327",
  "version": 1,
  "createdBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdateBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdatedOn": "2022-04-20T10:48:20.573Z",
  "definition": {
    "protocol": "none",
    "clientId": "",
    "additionalPackages": {
      "mypackage": {
        "type": "npm",
        "content": "",
        "name": "mypackage"
      }
    },
    "strategy": "Default",
    "settings": {
      "loopback": true
    },
    "model": {
      "currentState": "Init",
      "stateMap": {
        "Init": {
          "name": "Init",
          "isEnabled": true,
          "sender": "{\n  // console.log(axios)\n  let response = await axios.request({\n    method: \"GET\",\n    url: \"https://filebin.net/38kkr4zci6jweim3/OaksV3.1_V2.12.1_20200430.zip\",\n    responseType: \"stream\",\n  });\n\n  md5Sum = crypto.createHash('md5')\n\n  response.data.on(\"data\", function (chunk) {\n    console.log(\"Got new data\");\n    md5Sum.update(chunk)\n  });\n\n  response.data.on(\"end\", function () {\n    console.log(\"Downloaded\");\n    console.log(md5Sum.digest('hex'))\n    metric.add(\"Downloaded\")\n  });\n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 0
        },
        "Running": {
          "name": "Running",
          "isEnabled": true,
          "sender": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 1
        },
        "Finished": {
          "name": "Finished",
          "isEnabled": true,
          "sender": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 2
        }
      },
      "setup": "",
      "teardown": ""
    }
  },
  "history": [
    {
      "userId": "6246fbe2fdee1fd07c3bb324",
      "timestamp": "2022-04-20T10:11:39.507Z",
      "description": {
        "action": "Create"
      }
    },
    {
      "userId": "6246fbe2fdee1fd07c3bb324",
      "timestamp": "2022-04-20T10:13:26.533Z",
      "description": {
        "action": "update"
      }
    },
    {
      "userId": "6246fbe2fdee1fd07c3bb324",
      "timestamp": "2022-04-20T10:17:32.100Z",
      "description": {
        "action": "update"
      }
    },
    {
      "userId": "6246fbe2fdee1fd07c3bb324",
      "timestamp": "2022-04-20T10:21:55.660Z",
      "description": {
        "action": "update"
      }
    },
    {
      "userId": "6246fbe2fdee1fd07c3bb324",
      "timestamp": "2022-04-20T10:48:20.573Z",
      "description": {
        "action": "update"
      }
    }
  ]
}