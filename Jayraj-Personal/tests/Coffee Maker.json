{
  "id": "62ff4350b1ba9b9d9d2a8fa2",
  "name": "Coffee Maker",
  "tags": {},
  "labels": [],
  "workspaceId": "6246fbe2fdee1fd07c3bb327",
  "version": 1,
  "createdBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdateBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdatedOn": "2022-08-19T08:24:44.421Z",
  "definition": {
    "protocol": "mqtt",
    "clientId": "",
    "additionalPackages": {},
    "strategy": "Default",
    "settings": {
      "url": "mqtt://broker.hivemq.com:1883",
      "topic": "/hello/",
      "subscriptionTopics": [
        "/hello",
        "/world"
      ],
      "timeout": 10000,
      "qos": 0,
      "retain": false,
      "keepalive": 10000,
      "reconnectPeriod": 60000,
      "connectTimeout": 60000,
      "username": "",
      "password": "",
      "identity": "",
      "psk": "",
      "key": "",
      "cert": "",
      "ca": ""
    },
    "model": {
      "currentState": "Init",
      "stateMap": {
        "Init": {
          "name": "Init",
          "isEnabled": true,
          "sender": "{\n  state.usage_count = 0\n  state.bean_level = 100\n  state.water_level = 100\n  state.milk_level = 100\n\n  state.grind_coffee = 3\n  state.extract_coffee = 2\n  state.boil_milk = 2\n  state.boil_water = 2\n  state.froth_milk = 2\n\n  state.options = [\n    {\n      espresso: true,\n      milk: true,\n      name: 'Latte',\n    },\n    {\n      espresso: true,\n      milk: true,\n      foam: true,\n      name: 'Cappucino',\n    },\n    {\n      espresso: true,\n      water: true,\n      name: 'Americano',\n    },\n    {\n      espresso: true,\n      foam: true,\n      name: 'Macchiato',\n    },\n    {\n      espresso: true,\n      milk: true,\n      chocolate: true,\n      name: 'Mocha',\n    },\n  ];\n}",
          "receiver": "",
          "icon": "",
          "index": 0
        },
        "Start": {
          "name": "Start",
          "isEnabled": true,
          "sender": "\n{\n  var now = dayjs().format()\n \n  state.current_brew = chance.integer({ min: 0, max: 4 })\n\n  console.log(\"Starting brew: \" + state.options[state.current_brew].name)\n  state.usage_count = state.usage_count + 1\n\n  var message = {\n    timestamp: now,\n    current_brew: state.current_brew,\n    usage_count: state.usage_count,\n    bean_level: state.bean_level,\n    water_level: state.water_level\n  };\n\n  next('Espresso')\n\n  return JSON.stringify(message, null, 2);\n\n\n  \n  if (chance.bool({ likelihood: 10 })) {\n    state.last_coffe = {\n      temperature: chance.pickone([60, 70, 80]),\n      bean_amount: chance.pickone([1, 2, 3]),\n      fill_quantity: chance.pickone([1, 2, 3]),\n    }\n    state.bean_level = state.bean_level - state.last_coffe.bean_amount\n    state.water_level = state.water_level - state.last_coffe.fill_quantity\n  }\n\n}",
          "receiver": "",
          "index": 1,
          "icon": ""
        },
        "Espresso": {
          "name": "Espresso",
          "isEnabled": true,
          "sender": "{ \n  while (state.refilling_coffee) {\n    console.log(\"Refilling Beans\")\n    if (state.bean_level < 80) {\n      state.bean_level += 20\n    }\n    else {\n      state.bean_level = 100\n      state.refilling_coffee = false\n    }\n  }\n\n  if (state.bean_level <= 20) {\n    state.refilling_coffee = true\n  }\n  else {\n    if (--state.grind_coffee <= 0) {\n      \n    }\n    \n  }\n\n\n  if (chance.bool({ likelihood: 10 })) {\n    state.last_coffe = {\n      temperature: chance.pickone([60, 70, 80]),\n      bean_amount: chance.pickone([1, 2, 3]),\n      fill_quantity: chance.pickone([1, 2, 3]),\n    }\n    state.bean_level = state.bean_level - state.last_coffe.bean_amount\n    state.water_level = state.water_level - state.last_coffe.fill_quantity\n    state.usage_count = state.usage_count + 1\n  }\n  var message = {\n    timestamp: moment.now(),\n    last_coffe: state.last_coffe,\n    usage_count: state.usage_count,\n    bean_level: state.bean_level,\n    water_level: state.water_level\n  };\n\n  return JSON.stringify(message, null, 2);\n}",
          "receiver": "",
          "icon": "",
          "index": 2
        },
        "Milk": {
          "name": "Milk",
          "isEnabled": true,
          "sender": "\n{\n  // Please provide your logic here.\n\n  // The device model state could be transitioned by calling next()\n  // To transition to a specific state pass state name as argument e.g.\n  // next('Running');\n\n}\n",
          "receiver": "",
          "index": 3,
          "icon": ""
        },
        "Foam": {
          "name": "Foam",
          "isEnabled": true,
          "sender": "\n{\n  // Please provide your logic here.\n\n  // The device model state could be transitioned by calling next()\n  // To transition to a specific state pass state name as argument e.g.\n  // next('Running');\n\n}\n",
          "receiver": "",
          "index": 4,
          "icon": ""
        },
        "Chocolate": {
          "name": "Chocolate",
          "isEnabled": true,
          "sender": "\n{\n  // Please provide your logic here.\n\n  // The device model state could be transitioned by calling next()\n  // To transition to a specific state pass state name as argument e.g.\n  // next('Running');\n\n}\n",
          "receiver": "",
          "index": 5,
          "icon": ""
        },
        "Finished": {
          "name": "Finished",
          "isEnabled": true,
          "sender": "",
          "receiver": "",
          "icon": "",
          "index": 7
        }
      },
      "setup": "",
      "teardown": ""
    }
  }
}