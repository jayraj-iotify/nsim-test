{
  "id": "630c9fd4f1203707c9d93de0",
  "name": "Smart Parking",
  "tags": {},
  "labels": [],
  "workspaceId": "6246fbe2fdee1fd07c3bb327",
  "version": 1,
  "createdBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdateBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdatedOn": "2022-09-07T12:57:31.439Z",
  "definition": {
    "protocol": "http",
    "clientId": "",
    "additionalPackages": {},
    "strategy": "Default",
    "settings": {
      "url": "https://5hex2r.sse.codesandbox.io/endpoint",
      "topic": "/hello/",
      "subscriptionTopics": [
        "/hello",
        "/world"
      ],
      "timeout": 100,
      "qos": 0,
      "retain": false,
      "keepalive": 10000,
      "reconnectPeriod": 60000,
      "connectTimeout": 60000,
      "username": "",
      "password": "",
      "identity": "",
      "psk": "",
      "key": "",
      "cert": "",
      "ca": "",
      "headers": {
        "Content-Type": "application/json"
      },
      "method": "POST"
    },
    "model": {
      "currentState": "Init",
      "stateMap": {
        "Init": {
          "name": "Init",
          "isEnabled": true,
          "sender": "{\n  var API_Key = glob.get('API_Key')\n\n  state.smart_city = false\n\n  state.r_latitude = chance.floating({ min: 12.8, max: 13.1, fixed: 6 });\n  state.r_longitude = chance.floating({ min: 77.5, max: 77.8, fixed: 6 });\n\n  var url = 'https://roads.googleapis.com/v1/nearestRoads?points=' + state.r_latitude + \",\" + state.r_longitude + '&key=' + API_Key\n\n  var res = rest.get(url)\n\n  state.latitude = res.snappedPoints[0].location.latitude\n  state.longitude = res.snappedPoints[0].location.longitude\n\n  state.free_spots = 0\n\n  next('Active')\n}",
          "receiver": "",
          "icon": "",
          "index": 0
        },
        "Active": {
          "name": "Active",
          "isEnabled": true,
          "sender": "{\n  var max_spots = chance.integer({ min: 1, max: 40 });\n  state.free_spots = volatile({\n    min: 0,\n    max: max_spots,\n    delta: 0.1,\n    key: \"parking_spots\",\n  });\n\n  var message = {\n    device: \"smart_parking\",\n    id: client(),\n    latitude: state.latitude,\n    longitude: state.longitude,\n    free_spots: Math.ceil(state.free_spots),\n  };\n\n  if (state.smart_city == true) {\n    mailbox.post(\"smart_parking\" + client(), message);\n    return JSON.stringify(message, null, 2);\n  } else {\n    return JSON.stringify(message, null, 2);\n  }\n}\n",
          "receiver": "",
          "icon": "",
          "index": 1
        },
        "Finished": {
          "name": "Finished",
          "isEnabled": true,
          "sender": "",
          "receiver": "",
          "icon": "",
          "index": 3
        }
      },
      "setup": "",
      "teardown": ""
    }
  }
}