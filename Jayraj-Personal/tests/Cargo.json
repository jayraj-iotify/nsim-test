{
  "id": "62ea590a6d2a5e93299928b7",
  "name": "Cargo",
  "tags": {
    "description": "Cargo Templates",
    "icon": "https://raw.githubusercontent.com/iotify/nsim-samples/main/cargo.png",
    "attribution": "public"
  },
  "labels": [
    "smarthome",
    "advanced",
    "transportation",
    "logistics"
  ],
  "workspaceId": "6246fbe2fdee1fd07c3bb327",
  "version": 1,
  "createdBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdateBy": "6246fbe2fdee1fd07c3bb324",
  "lastUpdatedOn": "2022-08-03T11:20:26.231Z",
  "definition": {
    "protocol": "none",
    "clientId": "",
    "additionalPackages": {
      "geolib": {
        "content": "geolib",
        "name": "geolib",
        "type": "npm"
      }
    },
    "strategy": "Default",
    "settings": {
      "loopback": true
    },
    "model": {
      "currentState": "Init",
      "stateMap": {
        "Init": {
          "name": "Init",
          "isEnabled": true,
          "sender": "\n{\n  //Simulate a cargo container near Amsterdam\n  state.position = {\n    longitude: 52.021252,\n    latitude: 3.986965\n  };\n\n  next('Runnnig')  \n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 0
        },
        "Running": {
          "name": "Running",
          "isEnabled": true,
          "sender": "{\n  //Increment location linearly at 270 degree bearing and 1km distance from last\n  state.position = geolib.computeDestinationPoint(state.position, 1000, 270);\n\n  // Simulated cargo temperature\n  state.temperature = volatile({\n    min: 10,\n    max: 70,\n    delta: 2,\n    key: \"cargotemp\",\n  });\n\n  //Use client() to find the current client ID\n  state.myid = \"Container_\" + client();\n\n  //return a string value which will be sent as the message payload\n  return JSON.stringify(state, null, 2);\n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 1
        },
        "Finished": {
          "name": "Finished",
          "isEnabled": true,
          "sender": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "receiver": "\n{\n  //Please provide your logic here. \n  \n  //The device model state could be transitioned by calling next()\n  //To transition to a specific state pass state name as argument e.g. \n  //next('Running');\n  \n}\n",
          "icon": "",
          "index": 2
        }
      },
      "setup": "",
      "teardown": ""
    }
  }
}